use your_database_name;  // Replace with your database name

db.orderinfo.insertMany([
    { cust_id: 123, cust_name: "abc", status: "A", price: 250 },
    { cust_id: 124, cust_name: "def", status: "B", price: 500 },
    { cust_id: 125, cust_name: "ghi", status: "A", price: 800 },
    { cust_id: 126, cust_name: "jkl", status: "A", price: 1500 },
    { cust_id: 127, cust_name: "mno", status: "C", price: 300 },
    { cust_id: 128, cust_name: "pqr", status: "A", price: 400 }
]);


i. Find the average price for each customer having status 'A'

db.orderinfo.aggregate([
    { $match: { status: "A" } },
    { $group: { _id: "$cust_id", avgPrice: { $avg: "$price" } } }
]);


ii. Display the status of the customers whose amount/price lies between 100 and 1000

db.orderinfo.find(
    { price: { $gte: 100, $lte: 1000 } },
    { status: 1, _id: 0 }  // Only display status, excluding _id
);

iii. Display the customers' information without "_id"

db.orderinfo.find(
    {},
    { _id: 0 }  // Exclude the _id field from the output
);

iv. Create a simple index on the orderinfo collection and fire the queries

db.orderinfo.createIndex({ status: 1 });
